Original code:

1.     Write code to registers.
2.     Write code from registers to a map.
3.     Execute code that was just written.
4.     Repeat from point 2.

What will be in registers:

r1:    Add r15 %1 r15
r2:    Add r16 %1 r16
r3:    St r15 where the r6th command's 1st arg is
r4:    St r16 where the r6th command's 2nd arg is
r5:    st r(r15) %(r16)
r6:    xor r16 (N of commands in "code") (if equal xor == 0 and so carry == 1)
r7:    zjmp (whenever the r10 is)
r8:    zjmp (whenever the r2 is (loop))
r9:    ld %0 r15
r10:   ld %(N of commands in "code") r16
r11:   live (contents of r1)
r12:   fork somewhere
r13:   1
r14:   Used for xor
r15:   Current reg counter (= 0)
r16:   Offset counter (= 12)

So the code will be like:

Write 12 to r15
Write 0 to r16

