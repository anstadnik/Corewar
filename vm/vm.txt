Parse parameters
	Check if it's a flag
		If so, change smth in flags structure
			(after flag there has to be an argument (sometimes)

	If not, then probably it's a bot
		Try opening this file and read 0 bytes from it
			On success, put it's fd into the array
				If array is full, ERROR

		If cannot open, ERROR

Initialize
	Initialize arena

	Read bots and check them
		Go through an array of fds
			For every fd read code from it into the buffer
				Check the code

					COR_MAX_LEN = 4 + PROG_NAME_LENGTH + 4 + 4 + COMMENT_LENGTH + 4 + CHAMP_MAX_SIZE
					
					Make arrays with COR_MAX_LEN bytes and use read(fd, arr, COR_MAX_LEN + 1). If read returns more then COR_MAX_LEN, it's error.
					Check if first 4 bytes are "corewar magic number", if not - it's error
					Check next PROG_NAME_LENGTH bytes. There must be name. If there isn't - error
					Next 4 bytes must be NULL
					There must be size of executable code. CODE_SIZE = size of executable code
					COMMENT_LENGTH bytes must have comment inside
					4 bytes for NULL
					read next CODE_SIZE bytes. If array ends three - error

					On error ERROR

				If all's ok, write it on arena(we can calculate the position of the bot)
					Initialize a carriage for a bot(put it into stack or queue or whatever)

Pray

Play (repeat)
	Carriages action
		Go through carriages stack(queue(whatever))
			For every carriage determine operation, parameters
				If it's counter is bigger than zero, decrement it
				Else execute them
					WRITE SOMETHING HERE PLEASE

	If there is output flag, call the output function, pass there a flag and a structure
		In that function call the appropriate ouput function(ncurses, output, sfml)

	If Cycle > Cycle_to_die
		Check players
			If player hasn't said "live" for 2 cycles - mark him as dead
			
			If there r no players alive, end

		Check carriages
			If carriage hasn't said "live" for 2 cycles - delete it from stack(heap(tree(queue(list(whatever)))))

...

Rules:
1: Never use t_info, use t_data
2: Always obey rule 1
3: And rule 2

vim:fdm=indent ts=2 sw=2
